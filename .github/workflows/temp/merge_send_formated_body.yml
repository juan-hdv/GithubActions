name: Prod Promotion Slack Notification
on:
  pull_request_target:
    types:
      - closed
    branches:
      - 'main'

jobs:
  promoted_to_prod:
    if: |
      (
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'promote') &&
      contains(github.event.pull_request.labels.*.name, 'dev1→prod1')
      )
    runs-on: ubuntu-latest
    steps:
    - name: PR Merged
      run: |
        echo The PR was merged: ${{ github.event.pull_request.title}}"

  format_body:
    runs-on: ubuntu-latest
    needs: promoted_to_prod
    steps:
    - uses: actions/checkout@v2.1.0
    - name: Echo messages
      run: |
        output=$( python save_formated_pr_body.py ${{ github.event.pull_request.body }} )
        echo "::set-output name=content::$output"
      id: pr_body
      working-directory: .github/workflows/
    - name: Print pr
      run: echo "${{ steps.pr_body.outputs.content }}"

  slack_notify:
    needs: format_body
    if: |
      (
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'promote') &&
      contains(github.event.pull_request.labels.*.name, 'dev1→prod1')
      )
    runs-on: ubuntu-latest
    steps:
    - name: PR Merged
      run: |
        echo The PR was merged: ${{ github.event.pull_request.title}}"
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: githubchangelog
        SLACK_TITLE: ${{ github.event.pull_request.title}}
        SLACK_MESSAGE: ${{ github.event.pull_request.body}}